<?php
$result = true ? 1 : 2 ? 3 : 4; //3，在C++ Js中这里的结果是1，因为会有短路。在java中这里会编译错误，因为java会把第一个: 后面的部分当做一个整体(2 ? 3 : 4)，因为2的位置需要一个bool类型而现在提供了一个int类型，所以会编译错误。但是php中不存在短路，始终将前面部分的计算结果值带入后一个计算一直到最后，所以这里是3
echo $result."\n";

$result = false ? 1 : 2 ? 3 : 4 ? 5 : 6; //5  php中和C/C++ JS中一样都是从左到右进行扫描，前一个三元运算的值是下一个?判断的条件。但是php中不像C++和js那样存在短路的效果，也就是说php中多个连续的?一定都会被执行到（一直执行到末尾），所以这个表达式最终的结果一定是在最后的5和6中间
echo $result."\n";